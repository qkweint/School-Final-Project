@page "/"
@using TablesDB
@using ModelsClass
@inject IJSRuntime js
@inject ProtectedSessionStorage MySession
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager


<span class="h1">My Customers</span>
@if (list == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table w-50">
        <thead>
            <tr>
                <th>Customers Name</th>
                <th>Customers ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Customer item in list)
            {
                <tr>
                    <td><a href="customerDetails/@item.CustomerID.ToString()"> @item.CustomerName</a></td>
                    <td>@item.CustomerID</td>
                    <td>
                        <a class="btn btn-success" href="customereEdit/@item.CustomerID.ToString()">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(@item.CustomerID))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a class="btn btn-success" href="addCustomer">Add Customer</a>
}
@code {
    List<Customer> list;
    private Customer c;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var customerSession = await MySession.GetAsync<Customer>("customerSession");
        if (customerSession.Success)
        {
            if (((Customer)(customerSession.Value)).CustomerName == "admin")
            {
                c = customerSession.Value;
                StateHasChanged();
            }
            else
                navigationManager.NavigateTo($"/details/{((Customer)(customerSession.Value)).CustomerID}");
        }
        else
            navigationManager.NavigateTo("login");

        CustomerDB customerDB = new CustomerDB();
        list = (List<Customer>)customerDB.SelectAll();
    }

    async Task Delete(int id)
    {
        CustomerDB customerDB = new CustomerDB();
        Customer customer = customerDB.SelectByPk(id);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {customer.CustomerName}'s Record?"))
        {
            customerDB.Delete(customer);
            OnInitialized();
        }
    }
}

