@using ModelsClass
@using TablesDB;
@inject ProtectedSessionStorage MySession
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager


@page "/gem/{Id:int}"
@if(g == null)
{
    <p>Loading...</p>
}
else
{
    <table>
        <tr>
            Gem Name:
            <td>@g.name</td>
        </tr>
        <tr>
            Gem Weight:
            <td><span>@g.weight</span>g</td>
        </tr>
        <tr>
            Gem Price:
            <td>@g.price$</td>
        </tr>
    </table>
}


@code {
    [Parameter] public int Id { get; set; }
    Gem g;
    private Customer c;
    GemDB gdb = new GemDB();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var customerSession = await MySession.GetAsync<Customer>("customerSession");
        if (customerSession.Success)
        {
            c = customerSession.Value;
            StateHasChanged();
        }
        else
            navigationManager.NavigateTo("login");

        g = gdb.SelectByPk(Id);

    }
}
