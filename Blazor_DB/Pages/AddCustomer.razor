@page "/addCustomer"
@inject NavigationManager uriHelper
@inject IJSRuntime js
@using ModelsClass
@using TablesDB
<div class="form-signin text-center w-50">
    <img class="mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
    <h1 class="h3 mb-3 font-weight-normal">Add Customer</h1>

    <label for="inputName" class="sr-only">Name</label>
    <input @bind-value="Name" type="text" id="inputEmail" class="form-control m-1" placeholder="Name" required autofocus>
    <label for="inputName" class="sr-only">Password</label>
    <input @bind-value="Pass" type="password" id="inputEmail" class="form-control m-1" required autofocus>
    <button @onclick="Add" class="btn btn-lg btn-primary btn-block m-1" type="submit">Add</button>
</div>




@code {
    [Parameter] public int id { get; set; }
    private string Name = "";
    private string Id;
    private string Pass;
    private Customer customer;


    async Task Add()
    {
        CustomerDB customerDB = new CustomerDB();
        customer = new Customer(int.Parse(Id), Name, Pass);
        customer.CustomerName = Name;
        customer.CustomerID = int.Parse(Id);
        customer.CustomerPassword = Pass;
        bool n = customerDB.Insert(customer);
        if (n == true)
        {
            await js.InvokeVoidAsync("alert", $"Customer added!");
            uriHelper.NavigateTo("/");
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Customer wasn't added!");
            uriHelper.NavigateTo("/");
        }
    }
}
